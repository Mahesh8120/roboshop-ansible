- name: setup catalogue
  hosts: catalogue
  become: yes
  tasks: 
  - name: disable old nodejs and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 
  
  - name: install nodejs 
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: make directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app 
      remote_src: yes 

  - name: installing dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: copy catalogue.service
    ansible.builtin.copy:  
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service  

  - name: demon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy mongodb repo 
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: installng mongodb client
    ansible.builtin.dnf:
      name: mongodb-org-shell
      state: present

  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.pjdevops.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  - name: loading schema 
    ansible.builtin.command: mongo --host mongodb.pjdevops.online </app/schema/catalogue.js
    when: product_count.stdout == "0"
 
  - name: enable and start catalogue 
    ansible.builtin.service: 
      name: catalogue     
      state: started
      enabled: yes
  

    
