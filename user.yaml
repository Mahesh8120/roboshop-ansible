- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable old version and enable new version
    ansible.builtin.: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
  
  - name: install nodejs
    ansible.builtin.dnf: 
      name: nodejs
      state: present

  - name: add roboshop user
    ansible.builtin.user: 
      name: roboshop

  - name: make directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download code to app directory
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp
  
  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app 
      remote_src: yes 

  - name: installing dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app
    
  - name: copying user service
    ansible.builtin.copy: 
      src: user.service
      dest: /etc/systemd/system/user.service
  
  - name: demon reload 
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copying mongodb repo
    ansible.builtin.copy: 
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: install mogodb client
    ansible.builtin.dnf:
      name: mongodb-org-shell
      state: present
  
  # - name: get the users count
  #   ansible.builtin.command:  mongo --host mongodb.daws76s.online --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
  #   register: user_count

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.daws76s.online < /app/schema/user.js
    # when: user_count.stdout == "0"
   
  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes

 